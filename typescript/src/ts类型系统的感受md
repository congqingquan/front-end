0. ts 中数据的类型，是一个集合的概念，而不是传统的单一类型。一定要改变对数据类型的思考方式。

1. ts 类型系统中的类型数据无法参与到程序运行时中，但可以在值数据：变量、函数、类、接口上提取类型信息到类型系统中，进行类型编程。

如：
1. keyof 获取对象、接口上的属性名
2. typeof 获取类型系统中的类型数据、运行时的数据的类型

总之：类型系统中的数据无法参与到程序运行时中，但可以在运行时的数据上提取类型信息到类型系统中。

2. ts 中，从类型中创建类型的方式如下：

1. 泛型类型
2. keyof 类型操作符
3. typeof 类型操作符
4. 索引访问类型
5. 条件类型
6. 映射类型
7. 模板字面量类型

3. ts 中的类型约束，其实就是在检查类型与约束类型的重叠部分。

4. 类型声明对比函数声明
```ts
type T<T extends any, U extends any> = T
function T(t: any, U: any) { return t }
```